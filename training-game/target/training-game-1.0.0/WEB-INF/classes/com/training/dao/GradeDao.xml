<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.training.dao.GradeDao">

    <resultMap type="com.training.entity.GradeEntity" id="gradeMap">
        <result property="id" column="id"/>
        <result property="series" column="series"/>
        <result property="experience" column="experience"/>
        <result property="gmtModified" column="gmt_modified"/>
        <result property="gmtCreate" column="gmt_create"/>
    </resultMap>

	<select id="queryObject" resultType="com.training.entity.GradeEntity">
		select
			`id`,
			`series`,
			`experience`,
			`gmt_modified`,
			`gmt_create`
		from grade
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.training.entity.GradeEntity">
		select
    		`id`,
    		`series`,
    		`experience`,
    		`gmt_modified`,
    		`gmt_create`
		from grade
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from grade
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.training.entity.GradeEntity" useGeneratedKeys="true" keyProperty="id">
		insert into grade(
			`series`,
			`experience`,
			`gmt_modified`,
			`gmt_create`)
		values(
			#{series},
			#{experience},
			#{gmtModified},
			#{gmtCreate})
	</insert>
	 
	<update id="update" parameterType="com.training.entity.GradeEntity">
		update grade 
		<set>
			<if test="series != null">`series` = #{series}, </if>
			<if test="experience != null">`experience` = #{experience}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from grade where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from grade where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>