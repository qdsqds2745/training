<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.training.dao.MemberDao">

    <resultMap type="com.training.entity.MemberEntity" id="memberMap">
        <result property="id" column="id"/>
        <result property="memberName" column="member_name"/>
        <result property="memberPassword" column="member_password"/>
        <result property="phone" column="phone"/>
        <result property="organizationId" column="organization_id"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtModified" column="gmt_modified"/>
    </resultMap>

	<select id="queryObject" resultType="com.training.entity.MemberEntity">
		select
			`id`,
			`member_name`,
			`member_password`,
			`phone`,
			`organization_id`,
			`gmt_create`,
			`gmt_modified`
		from training_member
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.training.entity.MemberEntity">
		select
    		`id`,
    		`member_name`,
    		`member_password`,
    		`phone`,
    		`organization_id`,
    		`gmt_create`,
    		`gmt_modified`
		from training_member
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from training_member
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.training.entity.MemberEntity" useGeneratedKeys="true" keyProperty="id">
		insert into training_member(
			`member_name`,
			`member_password`,
			`phone`,
			`organization_id`,
			`gmt_create`,
			`gmt_modified`)
		values(
			#{memberName},
			#{memberPassword},
			#{phone},
			#{organizationId},
			#{gmtCreate},
			#{gmtModified})
	</insert>
	 
	<update id="update" parameterType="com.training.entity.MemberEntity">
		update training_member 
		<set>
			<if test="memberName != null">`member_name` = #{memberName}, </if>
			<if test="memberPassword != null">`member_password` = #{memberPassword}, </if>
			<if test="phone != null">`phone` = #{phone}, </if>
			<if test="organizationId != null">`organization_id` = #{organizationId}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from training_member where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from training_member where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>